#Generated Form Function

########################################################################
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
# Generated On: 02/10/2012 10:21
# Generated By: nlang
########################################################################

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
#endregion

#region Generated Form Objects
$essai = 0
[string]$solution = Get-Random -Minimum 100000 -Maximum 999999
$form1 = New-Object System.Windows.Forms.Form
$label2 = New-Object System.Windows.Forms.Label
$textBox1 = New-Object System.Windows.Forms.TextBox
$button1 = New-Object System.Windows.Forms.Button
$label1 = New-Object System.Windows.Forms.Label
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
function messagebox {
param ([string]$texte, [string]$titre, [int]$type)

[System.Windows.Forms.MessageBox]::show($texte,$titre,$type)

}

function retry{
$global:essai = 0;[string]$global:solution = Get-Random -Minimum 100000 -Maximum 999999; $textBox1.Text = ""; $label1.Text = ""
}

function calcul([string]$rescalcul)
{
$trouve = 0
[string]$retour = ""
for ($caractere = 0;$caractere -lt $($rescalcul.length);$caractere++)
{
$trouve = 0
if ($rescalcul.get_chars($caractere) -eq $solution.get_chars($caractere))
	{$retour += "o";$trouve = 1}
	else 	{
		for ($caractere2 = 0;$caractere2 -lt $($rescalcul.length);$caractere2++)
				{
				if ($rescalcul.get_chars($caractere) -eq $solution.get_chars($caractere2)) {$retour += "x";$trouve = 1;break}
				}
		if ($trouve -eq 0){$retour +="_"}
		
			}
	

	}
return ($retour.ToCharArray() | sort) -join ""
}

#endregion Generated Form Objects

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.
$button1_OnClick= 
{
$global:essai++
$erreur = 0
$valeur = $textBox1.Text -as [int] -is [int]
if ($valeur -eq $false){messagebox "Merci d'entrer un chiffre entier!" "Nombre incorrect!" 0
$erreur = 1}
elseif (([int]$textbox1.Text) -lt 100000){messagebox "Merci d'entrer un nombre entre 100000 et 999999" "Mauvais nombre!" 0
$erreur = 1}
if ($erreur -eq 0){$resultat = calcul $textBox1.Text; $label1.Text += "$global:essai)"+$resultat+"  "+$textBox1.Text+"`n"}
if ($textBox1.Text -eq $solution){	$reponse = messagebox "Félicitations! Vous avez réussi en $essai coup(s)`n`nVoulez vous recommencer?" "Bravo!" 4
									if ($reponse -eq "Yes"){retry}
									else {$form1.Close()}}
if ($global:essai -gt 10){	$reponse = messagebox "Désolé :( la réponse était $solution`n`nVoulez vous recommencer?" "10 essais passés!" 4
									if ($reponse -eq "Yes"){retry}
									else {$form1.Close()}}
}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 273
$System_Drawing_Size.Width = 366
$form1.ClientSize = $System_Drawing_Size
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Name = "form1"
$form1.Text = "Mastermind"

$label2.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 255
$System_Drawing_Point.Y = 88
$label2.Location = $System_Drawing_Point
$label2.Name = "label2"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 97
$System_Drawing_Size.Width = 99
$label2.Size = $System_Drawing_Size
$label2.TabIndex = 3
$label2.Text = "x = mal placé
o = bien placé
_ = absent"

$form1.Controls.Add($label2)

$textBox1.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 255
$System_Drawing_Point.Y = 27
$textBox1.Location = $System_Drawing_Point
$textBox1.MaxLength = 6
$textBox1.Name = "textBox1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 100
$textBox1.Size = $System_Drawing_Size
$textBox1.TabIndex = 2

$form1.Controls.Add($textBox1)

$button1.BackColor = [System.Drawing.Color]::FromArgb(255,212,208,200)

$button1.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 255
$System_Drawing_Point.Y = 54
$button1.Location = $System_Drawing_Point
$button1.Name = "button1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$button1.Size = $System_Drawing_Size
$button1.TabIndex = 1
$button1.Text = "Valider!"
$button1.UseVisualStyleBackColor = $False
$button1.add_Click($button1_OnClick)

$form1.Controls.Add($button1)

$label1.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 13
$System_Drawing_Point.Y = 13
$label1.Location = $System_Drawing_Point
$label1.Name = "label1"
$label1.Font = New-Object System.Drawing.Font("Century Gothic",12,0,3,0)
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 251
$System_Drawing_Size.Width = 169
$label1.Size = $System_Drawing_Size
$label1.TabIndex = 0

$form1.Controls.Add($label1)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null